;; Analyzed by ClojureScript 0.0-3178
{:use-macros nil, :excludes #{}, :name penny-pub-react.pubnub, :imports nil, :requires {clojure.string clojure.string, string clojure.string}, :uses nil, :defs {subscribe-user {:protocol-inline nil, :meta {:file nil, :arglists (quote ([channel-slug team-name player-number player-name connected? players playing? batch-size total-coins timers finished?])), :end-column 21, :end-line 143, :column 7, :line 143}, :name penny-pub-react.pubnub/subscribe-user, :variadic false, :file "src-cljs/penny_pub_react/pubnub.cljs", :end-column 21, :method-params ([channel-slug team-name player-number player-name connected? players playing? batch-size total-coins timers finished?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 11, :fn-var true, :arglists (quote ([channel-slug team-name player-number player-name connected? players playing? batch-size total-coins timers finished?])), :test true}, update-coins {:protocol-inline nil, :meta {:file nil, :arglists (quote ([players m timers finished? moderator? channel-slug])), :end-column 19, :end-line 38, :column 7, :line 38}, :name penny-pub-react.pubnub/update-coins, :variadic false, :file "src-cljs/penny_pub_react/pubnub.cljs", :end-column 19, :method-params ([players m timers finished? moderator? channel-slug]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 6, :fn-var true, :arglists (quote ([players m timers finished? moderator? channel-slug])), :test true}, my-obj {:file "src-cljs/penny_pub_react/pubnub.cljs", :meta {:file nil, :end-column 28, :end-line 173, :column 22, :line 173}, :line 173, :column 17, :end-line 173, :end-column 28, :test true, :name penny-pub-react.pubnub/my-obj}, pubInit {:file "src-cljs/penny_pub_react/pubnub.cljs", :meta {:file nil, :end-column 13, :end-line 8, :column 6, :line 8}, :line 8, :column 1, :end-line 8, :end-column 13, :test true, :name penny-pub-react.pubnub/pubInit}, get-team-name {:protocol-inline nil, :meta {:file nil, :arglists (quote ([channel-slug team-name])), :end-column 20, :end-line 117, :column 7, :line 117}, :name penny-pub-react.pubnub/get-team-name, :variadic false, :file "src-cljs/penny_pub_react/pubnub.cljs", :end-column 20, :method-params ([channel-slug team-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 2, :fn-var true, :arglists (quote ([channel-slug team-name])), :test true}, message-obj {:file "src-cljs/penny_pub_react/pubnub.cljs", :meta {:file nil, :end-column 18, :end-line 34, :column 7, :line 34}, :line 34, :column 2, :end-line 34, :end-column 18, :test true, :name penny-pub-react.pubnub/message-obj}, set-state-obj {:file "src-cljs/penny_pub_react/pubnub.cljs", :meta {:file nil, :end-column 20, :end-line 134, :column 7, :line 134}, :line 134, :column 2, :end-line 134, :end-column 20, :test true, :name penny-pub-react.pubnub/set-state-obj}, subscribe-moderator-obj {:file "src-cljs/penny_pub_react/pubnub.cljs", :meta {:file nil, :end-column 30, :end-line 97, :column 7, :line 97}, :line 97, :column 2, :end-line 97, :end-column 30, :test true, :name penny-pub-react.pubnub/subscribe-moderator-obj}, update-players-data {:protocol-inline nil, :meta {:file nil, :arglists (quote ([channel-slug players])), :doc "Update player's username and state", :end-column 26, :end-line 76, :column 7, :line 76}, :name penny-pub-react.pubnub/update-players-data, :variadic false, :file "src-cljs/penny_pub_react/pubnub.cljs", :end-column 26, :method-params ([channel-slug players]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([channel-slug players])), :doc "Update player's username and state", :test true}, update-players-data-obj {:file "src-cljs/penny_pub_react/pubnub.cljs", :meta {:file nil, :end-column 31, :end-line 79, :column 8, :line 79}, :line 79, :column 3, :end-line 79, :end-column 31, :test true, :name penny-pub-react.pubnub/update-players-data-obj}, substract-coins {:protocol-inline nil, :meta {:file nil, :arglists (quote ([players p-index qty])), :end-column 22, :end-line 27, :column 7, :line 27}, :name penny-pub-react.pubnub/substract-coins, :variadic false, :file "src-cljs/penny_pub_react/pubnub.cljs", :end-column 22, :method-params ([players p-index qty]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 3, :fn-var true, :arglists (quote ([players p-index qty])), :test true}, PUBNUB_demo {:file "src-cljs/penny_pub_react/pubnub.cljs", :meta {:file nil, :end-column 18, :end-line 16, :column 7, :line 16}, :line 16, :column 2, :end-line 16, :end-column 18, :test true, :name penny-pub-react.pubnub/PUBNUB_demo}, count-coins {:protocol-inline nil, :meta {:file nil, :arglists (quote ([players])), :end-column 18, :end-line 18, :column 7, :line 18}, :name penny-pub-react.pubnub/count-coins, :variadic false, :file "src-cljs/penny_pub_react/pubnub.cljs", :end-column 18, :method-params ([players]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([players])), :test true}, connect {:protocol-inline nil, :meta {:file nil, :arglists (quote ([])), :doc "Init the PubNub Object", :end-column 14, :end-line 13, :column 7, :line 13}, :name penny-pub-react.pubnub/connect, :variadic false, :file "src-cljs/penny_pub_react/pubnub.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Init the PubNub Object", :test true}, send-message {:protocol-inline nil, :meta {:file nil, :arglists (quote ([channel-slug message])), :doc "Send a message to the channel", :end-column 19, :end-line 31, :column 7, :line 31}, :name penny-pub-react.pubnub/send-message, :variadic false, :file "src-cljs/penny_pub_react/pubnub.cljs", :end-column 19, :method-params ([channel-slug message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([channel-slug message])), :doc "Send a message to the channel", :test true}, add-coins {:protocol-inline nil, :meta {:file nil, :arglists (quote ([players p-index qty])), :end-column 16, :end-line 24, :column 7, :line 24}, :name penny-pub-react.pubnub/add-coins, :variadic false, :file "src-cljs/penny_pub_react/pubnub.cljs", :end-column 16, :method-params ([players p-index qty]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 3, :fn-var true, :arglists (quote ([players p-index qty])), :test true}, get-team-name-obj {:file "src-cljs/penny_pub_react/pubnub.cljs", :meta {:file nil, :end-column 24, :end-line 118, :column 7, :line 118}, :line 118, :column 2, :end-line 118, :end-column 24, :test true, :name penny-pub-react.pubnub/get-team-name-obj}, set-state {:protocol-inline nil, :meta {:file nil, :arglists (quote ([channel-slug jsobj])), :end-column 16, :end-line 133, :column 7, :line 133}, :name penny-pub-react.pubnub/set-state, :variadic false, :file "src-cljs/penny_pub_react/pubnub.cljs", :end-column 16, :method-params ([channel-slug jsobj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 2, :fn-var true, :arglists (quote ([channel-slug jsobj])), :test true}, update-player {:protocol-inline nil, :meta {:file nil, :arglists (quote ([players p-index uuid])), :doc "Update player's username and state ", :end-column 20, :end-line 70, :column 7, :line 70}, :name penny-pub-react.pubnub/update-player, :variadic false, :file "src-cljs/penny_pub_react/pubnub.cljs", :end-column 20, :method-params ([players p-index uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 3, :fn-var true, :arglists (quote ([players p-index uuid])), :doc "Update player's username and state ", :test true}, subscribe-user-obj {:file "src-cljs/penny_pub_react/pubnub.cljs", :meta {:file nil, :end-column 25, :end-line 144, :column 7, :line 144}, :line 144, :column 2, :end-line 144, :end-column 25, :test true, :name penny-pub-react.pubnub/subscribe-user-obj}, subscribe-moderator {:protocol-inline nil, :meta {:file nil, :arglists (quote ([channel-name channel-slug players timers finished?])), :doc "Update player's username and state ", :end-column 26, :end-line 94, :column 7, :line 94}, :name penny-pub-react.pubnub/subscribe-moderator, :variadic false, :file "src-cljs/penny_pub_react/pubnub.cljs", :end-column 26, :method-params ([channel-name channel-slug players timers finished?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 5, :fn-var true, :arglists (quote ([channel-name channel-slug players timers finished?])), :doc "Update player's username and state ", :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:publish_key :subscribe_key :coins :timer-first :timer :timer-total :username :state], :seen #{:subscribe_key :timer :username :state :coins :timer-first :timer-total :publish_key}}, :doc nil}