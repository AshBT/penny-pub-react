;; Analyzed by ClojureScript 0.0-3178
{:use-macros nil, :excludes #{}, :name penny-pub-react.pubnub, :imports nil, :requires nil, :uses nil, :defs {message-obj {:file "src-cljs/penny_pub_react/pubnub.cljs", :meta {:file nil, :end-column 18, :end-line 47, :column 7, :line 47}, :line 47, :column 2, :end-line 47, :end-column 18, :test true, :name penny-pub-react.pubnub/message-obj}, send-message {:protocol-inline nil, :meta {:file nil, :arglists (quote ([message channel-slug])), :doc "Send a message to the channel", :end-column 19, :end-line 44, :column 7, :line 44}, :name penny-pub-react.pubnub/send-message, :variadic false, :file "src-cljs/penny_pub_react/pubnub.cljs", :end-column 19, :method-params ([message channel-slug]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([message channel-slug])), :doc "Send a message to the channel", :test true}, subscribe-user-obj {:file "src-cljs/penny_pub_react/pubnub.cljs", :meta {:file nil, :end-column 25, :end-line 30, :column 7, :line 30}, :line 30, :column 2, :end-line 30, :end-column 25, :test true, :name penny-pub-react.pubnub/subscribe-user-obj}, suscribe-user {:protocol-inline nil, :meta {:file nil, :arglists (quote ([channel-slug])), :end-column 20, :end-line 29, :column 7, :line 29}, :name penny-pub-react.pubnub/suscribe-user, :variadic false, :file "src-cljs/penny_pub_react/pubnub.cljs", :end-column 20, :method-params ([channel-slug]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([channel-slug])), :test true}, subscribe-moderator-obj {:file "src-cljs/penny_pub_react/pubnub.cljs", :meta {:file nil, :end-column 30, :end-line 18, :column 7, :line 18}, :line 18, :column 2, :end-line 18, :end-column 30, :test true, :name penny-pub-react.pubnub/subscribe-moderator-obj}, suscribe-moderator {:protocol-inline nil, :meta {:file nil, :arglists (quote ([channel-name channel-slug])), :end-column 25, :end-line 17, :column 7, :line 17}, :name penny-pub-react.pubnub/suscribe-moderator, :variadic false, :file "src-cljs/penny_pub_react/pubnub.cljs", :end-column 25, :method-params ([channel-name channel-slug]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([channel-name channel-slug])), :test true}, PUBNUB_demo {:file "src-cljs/penny_pub_react/pubnub.cljs", :meta {:file nil, :end-column 18, :end-line 15, :column 7, :line 15}, :line 15, :column 2, :end-line 15, :end-column 18, :test true, :name penny-pub-react.pubnub/PUBNUB_demo}, init {:protocol-inline nil, :meta {:file nil, :arglists (quote ([])), :doc "Init the PubNub Object, and subscribe to the channel", :end-column 11, :end-line 12, :column 7, :line 12}, :name penny-pub-react.pubnub/init, :variadic false, :file "src-cljs/penny_pub_react/pubnub.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Init the PubNub Object, and subscribe to the channel", :test true}, pubInit {:file "src-cljs/penny_pub_react/pubnub.cljs", :meta {:file nil, :end-column 13, :end-line 7, :column 6, :line 7}, :line 7, :column 1, :end-line 7, :end-column 13, :test true, :name penny-pub-react.pubnub/pubInit}}, :require-macros nil, :cljs.analyzer/constants {:order [:publish_key :subscribe_key], :seen #{:subscribe_key :publish_key}}, :doc nil}